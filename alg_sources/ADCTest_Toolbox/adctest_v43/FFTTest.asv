function FFTTest(dsc)

screensize = get(0,'ScreenSize');

edit_FFT_Test_window = figure('Visible','on',...
                              'Position', [screensize(3)*0.25 screensize(4)*0.25 screensize(3)*0.5 screensize(4)*0.5]',...
                              'Name','FFT Test',...
                              'NumberTitle','off');
                          
                            
hTextSettings = uicontrol('Style','text',...
                          'String','Settings',...
                          'Units','normalized',...
                          'Position',[0.05 0.85 0.4 0.08],...
                          'HorizontalAlignment','center',...
                          'FontWeight','bold',...                          
                          'BackgroundColor',[0.8 0.8 0.8]);    
                      
hTextResults =  uicontrol('Style','text',...
                          'String','Results',...
                          'Units','normalized',...
                          'Position',[0.55 0.85 0.4 0.07],...
                          'HorizontalAlignment','center',...
                          'FontWeight','bold',...
                          'BackgroundColor',[0.8 0.8 0.8]);                          
                      
hTextWindowing =  uicontrol('Style','text',...
                           'String','Windowing: ',...
                           'Units','normalized',...
                           'Position',[0.1 0.79 0.1 0.04],...
                           'HorizontalAlignment','left',...
                           'BackgroundColor',[0.8 0.8 0.8]);                          
                      
hPopupMenuWindowing = uicontrol('Style','popupmenu',...
                                'Units','normalized',...
                                'Position',[0.25 0.8 0.22 0.04],...
                                'String',{'None (Rect)','Hann','Blackman','Blackman-Harris'},...
                                'Callback',@Windowing_callback);
                            
hTextSFDR =   uicontrol('Style','text',...
                        'String','SFDR: ',...
                        'Units','normalized',...
                        'Position',[0.55 0.8 0.15 0.04],...
                        'HorizontalAlignment','left',...
                        'FontWeight','bold',...
                        'BackgroundColor',[0.8 0.8 0.8]);
                    
hTextSFDRValue = uicontrol('Style','text',...
                            'String',' dB',...
                            'Units','normalized',...
                            'Position',[0.7 0.8 0.2 0.04],...
                            'HorizontalAlignment','right',...
                            'FontWeight','bold',...
                            'BackgroundColor',[0.8 0.8 0.8]);     
                        
hTextRelFreq = uicontrol('Style','text',...
                            'String','Rel. freq. of 1st harm. (f/fs): ',...
                            'Units','normalized',...
                            'Position',[0.55 0.75 0.3 0.04],...
                            'HorizontalAlignment','left',...
                            'BackgroundColor',[0.8 0.8 0.8]);                            
                        
hTextRelFreqValue = uicontrol('Style','text',...
                            'String','',...
                            'Units','normalized',...
                            'Position',[0.85 0.75 0.05 0.04],...
                            'HorizontalAlignment','right',...
                            'BackgroundColor',[0.8 0.8 0.8]);                            
                        
hText_2nd_harm =  uicontrol('Style','text',...
                        'String','2nd harmonic: ',...
                        'Units','normalized',...
                        'Position',[0.55 0.7 0.15 0.04],...
                        'HorizontalAlignment','left',...
                        'BackgroundColor',[0.8 0.8 0.8]);                       

hText_2nd_harmValue = uicontrol('Style','text',...
                            'String','',...
                            'Units','normalized',...
                            'Position',[0.7 0.7 0.2 0.04],...
                            'HorizontalAlignment','right',...
                            'BackgroundColor',[0.8 0.8 0.8]);                            

hText_3rd_harm =  uicontrol('Style','text',...
                        'String','3rd harmonic: ',...
                        'Units','normalized',...
                        'Position',[0.55 0.65 0.15 0.04],...
                        'HorizontalAlignment','left',...
                        'BackgroundColor',[0.8 0.8 0.8]);                       

hText_3rd_harmValue = uicontrol('Style','text',...
                            'String','',...
                            'Units','normalized',...
                            'Position',[0.7 0.65 0.2 0.04],...
                            'HorizontalAlignment','right',...
                            'BackgroundColor',[0.8 0.8 0.8]);                            
                    
hText_4th_harm =  uicontrol('Style','text',...
                        'String','4th harmonic: ',...
                        'Units','normalized',...
                        'Position',[0.55 0.6 0.15 0.04],...
                        'HorizontalAlignment','left',...
                        'BackgroundColor',[0.8 0.8 0.8]);                       

hText_4th_harmValue = uicontrol('Style','text',...
                            'String','',...
                            'Units','normalized',...
                            'Position',[0.7 0.6 0.2 0.04],...
                            'HorizontalAlignment','right',...
                            'BackgroundColor',[0.8 0.8 0.8]);                            
                        
hText_5th_harm =  uicontrol('Style','text',...
                        'String','5th harmonic: ',...
                        'Units','normalized',...
                        'Position',[0.55 0.55 0.15 0.04],...
                        'HorizontalAlignment','left',...
                        'BackgroundColor',[0.8 0.8 0.8]);                       

hText_5th_harmValue = uicontrol('Style','text',...
                            'String','',...
                            'Units','normalized',...
                            'Position',[0.7 0.55 0.2 0.04],...
                            'HorizontalAlignment','right',...
                            'BackgroundColor',[0.8 0.8 0.8]);                            
                        
                        
hAxesSpectrum = axes ('Position',[0.1 0.1 0.8 0.4]);

%Initializing state variables
NUM_OF_HARMONICS = 5;
N_FFT = 1e6; %length of FFT
datavect = dsc.data(:) - mean(dsc.data); %AC-coupling and forcing column vectors
N = length(datavect);
set(hPopupMenuWindowing,'Value',3); %default window is Blackman window
window_vector = 

%First processing and initializing GUI:
%Processing data vector:
windowed_data = datavect.*window_vector;
windowed_data = windowed_data(:);
spect = abs(fft(windowed_data,N_FFT));
half_side = spect(1:floor(length(spect)/2)+1);
[amp_max, index_max] = max(half_side);
rel_freq_max = (index_max-1)/N_FFT; %estimated relative frequency of the 1st harmonic
H = [1;zeros(NUM_OF_HARMONICS-1,1)];
indeces = [index_max; zeros(NUM_OF_HARMONICS-1,1)];
%FFT analyzer
for k = 2:NUM_OF_HARMONICS
    %k. harmonic:
    indeces(k) = 1 + round(k*(rel_freq_max*N_FFT));
    if (indeces(k) <= length(half_side)) %k-th harmonic is within the Nyquist frequency
        H(k) = half_side(indeces(k))/half_side(indeces(1));
    else
        H(k) = NaN;
    end
end
%Calculating SFDR:
max_harmonic_distortion = 20*log10(max(H(2:end)));
%Discarding main lobe from spourious components:
max_spur = max([half_side(1:index_max-200);half_side(index_max+200:end)]);
max_spourious_component = 20*log10(max_spur/half_side(indeces(1)));
SFDR = max([max_harmonic_distortion,max_spourious_component]);
axes(hAxesSpectrum);
half_side_reduced = half_side(2:end)/half_side(indeces(1));
plot((2:floor(N_FFT/2)+1)/N_FFT,10*log10(half_side_reduced));
axis([0 0.5 -150 10]);
xlabel('f/fs');
ylabel('Amplitude [dB]');
%Updating display:
set (hTextSFDRValue,'String',sprintf('%2.3f dB',SFDR));
set (hTextRelFreqValue, 'String', sprintf('%1.6f',rel_freq_max));
set (hText_2nd_harmValue, 'String', sprintf('%2.3f dB',20*log10(H(2))));
set (hText_3rd_harmValue, 'String', sprintf('%2.3f dB',20*log10(H(3))));
set (hText_4th_harmValue, 'String', sprintf('%2.3f dB',20*log10(H(4))));
set (hText_5th_harmValue, 'String', sprintf('%2.3f dB',20*log10(H(5))));

    function Windowing_callback(source,eventdata)
        menuval = get(source,'Value');
        if (menuval == 1) %Rectangular window
            window_vector = ones(N,1)/sum(ones(N,1));
        elseif (menuval == 2) %Hann window
            window_vector = hann(N)/sum(hann(N)); 
        elseif (menuval == 3) %Blackman window
            window_vector = blackman(N)/sum(blackman(N));
        elseif (menuval == 4) %3-term Blackman-Harris window
            window_vector = BH3Win(N)/sum(BH3Win(N));
        end
        %Processing data vector:
        windowed_data = datavect.*window_vector;
        windowed_data = windowed_data(:);
        spect = abs(fft(windowed_data,N_FFT));
        half_side = spect(1:floor(length(spect)/2)+1);
        [amp_max, index_max] = max(half_side);
        rel_freq_max = (index_max-1)/N_FFT; %estimated relative frequency of the 1st harmonic
        H = [1;zeros(NUM_OF_HARMONICS-1,1)];
        indeces = [index_max; zeros(NUM_OF_HARMONICS-1,1)];        
        %FFT analyzer
        for k = 2:NUM_OF_HARMONICS
            %k. harmonic:
            indeces(k) = 1 + round(k*(rel_freq_max*N_FFT));
            if (indeces(k) <= length(half_side)) %k-th harmonic is within the Nyquist frequency
                H(k) = half_side(indeces(k))/half_side(indeces(1));
            else
                H(k) = NaN;
            end
        end
        %Calculating SFDR:
        max_harmonic_distortion = 20*log10(max(H(2:end)));
        %Discarding main lobe from spourious components:
        max_spur = max([half_side(1:index_max-200);half_side(index_max+200:end)]);
        max_spourious_component = 20*log10(max_spur/half_side(indeces(1)));
        SFDR = max([max_harmonic_distortion,max_spourious_component]);
        axes(hAxesSpectrum);
        half_side_reduced = half_side(2:end)/half_side(indeces(1));
        plot((2:floor(N_FFT/2)+1)/N_FFT,10*log10(half_side_reduced));
        axis([0 0.5 -150 10]);
        xlabel('f/fs');
        ylabel('Amplitude [dB]');
        %Updating display:
        set (hTextSFDRValue,'String',sprintf('%2.3f dB',SFDR));
        set (hTextRelFreqValue, 'String', sprintf('%1.6f',rel_freq_max));
        set (hText_2nd_harmValue, 'String', sprintf('%2.3f dB',20*log10(H(2))));
        set (hText_3rd_harmValue, 'String', sprintf('%2.3f dB',20*log10(H(3))));
        set (hText_4th_harmValue, 'String', sprintf('%2.3f dB',20*log10(H(4))));
        set (hText_5th_harmValue, 'String', sprintf('%2.3f dB',20*log10(H(5))));
    end
                        
end
