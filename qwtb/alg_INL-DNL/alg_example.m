%% Integral Non Linearity of ADC
% Example for algorithm INL
%
% INL is an algorithm for estimating Integral Non-Linearity of an ADC. ADC has
% to sample sinewave, ADC codes are required.
%
% See also 'Virosztek, T., P치lfi V., Renczes B., Koll치r I., Balogh L., S치rhegyi
% A., M치rkus J., Bilau Z. T., ADCTest project site: http://www.mit.bme.hu/projects/adctest 2000-2014';

%% Generate sample data
% Suppose a sine wave of nominal frequency 10 Hz and nominal amplitude 1 V is
% sampled by ADC with bit resolution of 4. First quantities |t| with time of
% samples and quantity |bits| with number of bits are prepared and put into
% input data structure |DI|.
DI = [];
DI.t.v=[0:1/1e4:1-1/1e4];
DI.bits.v = 4;
%%
% Waveform is constructed.
Anom = 1; fnom = 2; phnom = 0;
wvfrm = Anom*sin(2*pi*fnom*DI.t.v + phnom);
%%
% Next code values are calculated. It is simulated by quantization and scaling
% of the sampled waveform. In real measurement code values can be obtained
% directly from the ADC. Suppose ADC range is -1..1.
codes = wvfrm;
rmin = -1; rmax = 1;
levels = 2.^DI.bits.v - 1;
codes(codes<rmin) = rmin;
codes(codes>rmax) = rmax;
codes = round((codes-rmin)./2.*levels);
%%
% Now lets introduce ADC error. Instead of generating code 2 ADC erroneously generates
% code 3 and instead of 10 it generates 11.
codes(codes==2) = 3;
codes(codes==10) = 11;
codes = codes + min(codes);
%%
% Create quantity |codes| and plot a figure with sampled sine wave and codes.
DI.codes.v = codes;
figure
%plot(t, (y+1).*1/2.*levels, t, codes);
hold on
stairs(DI.t.v, codes);
wvfrm = (wvfrm + Anom).*levels./2;
plot(DI.t.v, wvfrm, '-r');
xlabel('t (s)')
ylabel('Codes / Voltage (scaled)');
legend('Codes generated by ADC','Original waveform scaled to match codes');
hold off

%% Call algorithm 
% Apply INL algorithm to the input data |DI|.
DO = qwtb('INL', DI);

%%
% Plot results of integral non-linearity. One can clearly observe defects on codes 3 and
% 11.
figure
plot(DO.INL.v, '-x');
xlabel('Code value')
ylabel('INL')
